{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/my-dashboard/src/widgets/Burndown/Burndown.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Burndown = () => {\n  _s();\n  var _project$total_milest, _project$total_story_;\n  const milestones = useFetchMilestones();\n  const projectMilestones = milestones.filter(m => m.project === project.id);\n  const milestoneValues = projectMilestones.reverse().map(m => {\n    var _m$total_points;\n    return (_m$total_points = m.total_points) !== null && _m$total_points !== void 0 ? _m$total_points : 0;\n  });\n  const milestoneValuesBurndown = [];\n  const total_milestones = (_project$total_milest = project.total_milestones) !== null && _project$total_milest !== void 0 ? _project$total_milest : 10;\n  const total_story_points = (_project$total_story_ = project.total_story_points) !== null && _project$total_story_ !== void 0 ? _project$total_story_ : 100;\n  var lastValue = total_story_points;\n  milestoneValuesBurndown.push(lastValue);\n  for (let i = 0; i < milestoneValues.length; i++) {\n    const value = lastValue - milestoneValues[i];\n    lastValue = value;\n    milestoneValuesBurndown.push(value);\n  }\n  const stepSize = total_story_points / total_milestones;\n\n  // Generate optimal values\n  const optimalValues = [];\n  for (let i = 0; i < total_milestones; i++) {\n    const optimalValue = total_story_points - stepSize * i;\n    optimalValues.push(optimalValue);\n  }\n  const series = [{\n    name: \"optimal\",\n    data: optimalValues\n  }, {\n    name: \"real\",\n    data: milestoneValuesBurndown\n  }];\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: options,\n    series: series,\n    type: \"area\",\n    width: \"500\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Burndown, \"xdwmmlsWCeALYNBrk5drh+J/lt8=\", true);\n_c = Burndown;\nexport default Burndown;\nvar _c;\n$RefreshReg$(_c, \"Burndown\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Burndown","_s","_project$total_milest","_project$total_story_","milestones","useFetchMilestones","projectMilestones","filter","m","project","id","milestoneValues","reverse","map","_m$total_points","total_points","milestoneValuesBurndown","total_milestones","total_story_points","lastValue","push","i","length","value","stepSize","optimalValues","optimalValue","series","name","data","Chart","options","type","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/my-dashboard/src/widgets/Burndown/Burndown.js"],"sourcesContent":["import React from \"react\";\n\nconst Burndown = () => {\n    const milestones = useFetchMilestones();\n\n    const projectMilestones = milestones.filter(m => m.project === project.id);\n    const milestoneValues = projectMilestones.reverse().map(m => m.total_points ?? 0);\n    const milestoneValuesBurndown = []\n\n    const total_milestones = project.total_milestones ?? 10;\n    const total_story_points = project.total_story_points ?? 100;\n\n    var lastValue = total_story_points;\n    milestoneValuesBurndown.push(lastValue);\n    for (let i = 0; i < milestoneValues.length; i++) {\n        const value = lastValue - milestoneValues[i];\n        lastValue = value;\n        milestoneValuesBurndown.push(value);\n    }\n\n    const stepSize = total_story_points / total_milestones;\n\n    // Generate optimal values\n    const optimalValues = [];\n    for (let i = 0; i < total_milestones; i++) {\n        const optimalValue = total_story_points - stepSize * i;\n        optimalValues.push(optimalValue);\n    }\n\n    const series = [\n        {\n            name: \"optimal\",\n            data: optimalValues\n        },\n        {\n            name: \"real\",\n            data: milestoneValuesBurndown\n        }\n    ]\n    \n    return (\n        <Chart\n            options={options}\n            series={series}\n            type=\"area\"\n            width=\"500\"\n        />\n    );\n};\n\nexport default Burndown;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,qBAAA;EACnB,MAAMC,UAAU,GAAGC,kBAAkB,CAAC,CAAC;EAEvC,MAAMC,iBAAiB,GAAGF,UAAU,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKA,OAAO,CAACC,EAAE,CAAC;EAC1E,MAAMC,eAAe,GAAGL,iBAAiB,CAACM,OAAO,CAAC,CAAC,CAACC,GAAG,CAACL,CAAC;IAAA,IAAAM,eAAA;IAAA,QAAAA,eAAA,GAAIN,CAAC,CAACO,YAAY,cAAAD,eAAA,cAAAA,eAAA,GAAI,CAAC;EAAA,EAAC;EACjF,MAAME,uBAAuB,GAAG,EAAE;EAElC,MAAMC,gBAAgB,IAAAf,qBAAA,GAAGO,OAAO,CAACQ,gBAAgB,cAAAf,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EACvD,MAAMgB,kBAAkB,IAAAf,qBAAA,GAAGM,OAAO,CAACS,kBAAkB,cAAAf,qBAAA,cAAAA,qBAAA,GAAI,GAAG;EAE5D,IAAIgB,SAAS,GAAGD,kBAAkB;EAClCF,uBAAuB,CAACI,IAAI,CAACD,SAAS,CAAC;EACvC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,eAAe,CAACW,MAAM,EAAED,CAAC,EAAE,EAAE;IAC7C,MAAME,KAAK,GAAGJ,SAAS,GAAGR,eAAe,CAACU,CAAC,CAAC;IAC5CF,SAAS,GAAGI,KAAK;IACjBP,uBAAuB,CAACI,IAAI,CAACG,KAAK,CAAC;EACvC;EAEA,MAAMC,QAAQ,GAAGN,kBAAkB,GAAGD,gBAAgB;;EAEtD;EACA,MAAMQ,aAAa,GAAG,EAAE;EACxB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,gBAAgB,EAAEI,CAAC,EAAE,EAAE;IACvC,MAAMK,YAAY,GAAGR,kBAAkB,GAAGM,QAAQ,GAAGH,CAAC;IACtDI,aAAa,CAACL,IAAI,CAACM,YAAY,CAAC;EACpC;EAEA,MAAMC,MAAM,GAAG,CACX;IACIC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAEJ;EACV,CAAC,EACD;IACIG,IAAI,EAAE,MAAM;IACZC,IAAI,EAAEb;EACV,CAAC,CACJ;EAED,oBACIjB,OAAA,CAAC+B,KAAK;IACFC,OAAO,EAAEA,OAAQ;IACjBJ,MAAM,EAAEA,MAAO;IACfK,IAAI,EAAC,MAAM;IACXC,KAAK,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;AAACpC,EAAA,CA9CID,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}