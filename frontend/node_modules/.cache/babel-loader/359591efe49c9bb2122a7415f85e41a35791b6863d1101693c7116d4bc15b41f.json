{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/my-dashboard/src/pages/TaigaProjects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = REACT_APP_TAIGA_URL + '/api/v1';\nconst login_payload = {\n  username: process.env.REACT_APP_TAIGA_USER,\n  password: process.env.REACT_APP_TAIGA_PASS,\n  type: \"normal\"\n};\nconst login_options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(login_payload)\n};\nconst TaigaProjects = () => {\n  _s();\n  const [login, setLogin] = useState({\n    \"username\": \"\",\n    \"token\": \"\"\n  });\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetchLogin();\n    fetch(url + '/auth', login_options).then(response => response.json()).then(json => setLogin(json)).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Taiga Project Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: project.name,\n          secondary: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaigaProjects, \"1fzmdpaIIM7fcIUHLPRw53vSsIk=\");\n_c = TaigaProjects;\nexport default TaigaProjects;\nvar _c;\n$RefreshReg$(_c, \"TaigaProjects\");","map":{"version":3,"names":["React","useState","useEffect","Typography","List","ListItem","ListItemText","jsxDEV","_jsxDEV","url","REACT_APP_TAIGA_URL","login_payload","username","process","env","REACT_APP_TAIGA_USER","password","REACT_APP_TAIGA_PASS","type","login_options","method","headers","body","JSON","stringify","TaigaProjects","_s","login","setLogin","projects","setProjects","fetchLogin","fetch","then","response","json","catch","error","console","style","marginTop","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","project","primary","name","secondary","description","id","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/my-dashboard/src/pages/TaigaProjects.js"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport { Typography, List, ListItem, ListItemText } from '@mui/material';\n\nconst url = REACT_APP_TAIGA_URL + '/api/v1';\n\nconst login_payload = {\n  username: process.env.REACT_APP_TAIGA_USER,\n  password: process.env.REACT_APP_TAIGA_PASS,\n  type:\"normal\"\n};\n\nconst login_options = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify(login_payload)\n}\n\nconst TaigaProjects = () => {\n  const [login, setLogin] = useState({\"username\": \"\", \"token\": \"\"});\n  const [projects, setProjects] = useState([]);\n\n\n  useEffect(() => {\n    fetchLogin();\n\n    fetch(url + '/auth', login_options)\n      .then(response => response.json())\n      .then(json => \n        setLogin(json)\n      )\n      .catch(error => console.error(error));\n\n  }, []);\n\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Taiga Project Management\n      </Typography>\n      <List>\n        {projects.map((project) => (\n          <ListItem key={project.id}>\n            <ListItemText primary={project.name} secondary={project.description} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default TaigaProjects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AACnD,SAASC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,GAAG,GAAGC,mBAAmB,GAAG,SAAS;AAE3C,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAC1CC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,oBAAoB;EAC1CC,IAAI,EAAC;AACP,CAAC;AAED,MAAMC,aAAa,GAAG;EACpBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,aAAa;AACpC,CAAC;AAED,MAAMc,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC;IAAC,UAAU,EAAE,EAAE;IAAE,OAAO,EAAE;EAAE,CAAC,CAAC;EACjE,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAG5CC,SAAS,CAAC,MAAM;IACd6B,UAAU,CAAC,CAAC;IAEZC,KAAK,CAACvB,GAAG,GAAG,OAAO,EAAEU,aAAa,CAAC,CAChCc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IACRP,QAAQ,CAACO,IAAI,CACf,CAAC,CACAC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAEzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAK+B,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChCjC,OAAA,CAACL,UAAU;MAACuC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbvC,OAAA,CAACJ,IAAI;MAAAqC,QAAA,EACFZ,QAAQ,CAACmB,GAAG,CAAEC,OAAO,iBACpBzC,OAAA,CAACH,QAAQ;QAAAoC,QAAA,eACPjC,OAAA,CAACF,YAAY;UAAC4C,OAAO,EAAED,OAAO,CAACE,IAAK;UAACC,SAAS,EAAEH,OAAO,CAACI;QAAY;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD1DE,OAAO,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/BID,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}