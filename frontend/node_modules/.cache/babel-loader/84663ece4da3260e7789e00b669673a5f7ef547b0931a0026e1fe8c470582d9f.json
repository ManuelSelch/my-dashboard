{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_TAIGA_URL + '/api/v1';\nconst apiService = {\n  get: async (endpoint, auth = true) => {\n    try {\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n      if (auth) {\n        headers['Authorization'] = 'Bearer ' + JSON.parse(localStorage.getItem(\"taigaToken\"));\n      }\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n        method: 'GET',\n        headers: headers\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Fetch error:', error);\n      throw error;\n    }\n  },\n  post: async (endpoint, data, auth = true) => {\n    try {\n      var headers = {\n        'Content-Type': 'application/json'\n      };\n      if (auth) {\n        headers['Authorization'] = 'Bearer ' + JSON.parse(localStorage.getItem(\"taigaToken\"));\n      }\n      const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Fetch error:', error);\n      throw error;\n    }\n  }\n  // ... other methods (put, delete, etc  .)\n};\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_TAIGA_URL","apiService","get","endpoint","auth","headers","JSON","parse","localStorage","getItem","response","fetch","method","ok","Error","json","error","console","post","data","body","stringify"],"sources":["/Users/admin/Documents/my-dashboard/src/services/apiService.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_TAIGA_URL + '/api/v1';\n\nconst apiService = {\n    get: async (endpoint, auth=true) => {\n        try {\n            var headers = {\n                'Content-Type': 'application/json'\n            }\n            if(auth) {\n                headers['Authorization'] = 'Bearer ' + JSON.parse(localStorage.getItem(\"taigaToken\"));\n            }\n\n            const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n                method: 'GET',\n                headers: headers\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('Fetch error:', error);\n            throw error;\n        }\n    },\n    post: async (endpoint, data, auth=true) => {\n        try {\n            var headers = {\n                'Content-Type': 'application/json'\n            }\n            if(auth) {\n                headers['Authorization'] = 'Bearer ' + JSON.parse(localStorage.getItem(\"taigaToken\"));\n            }\n\n            const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify(data),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return await response.json();\n        } catch (error) {\n            console.error('Fetch error:', error);\n            throw error;\n        }\n    },\n    // ... other methods (put, delete, etc  .)\n};\n\nexport default apiService;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,GAAG,SAAS;AAEhE,MAAMC,UAAU,GAAG;EACfC,GAAG,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,GAAC,IAAI,KAAK;IAChC,IAAI;MACA,IAAIC,OAAO,GAAG;QACV,cAAc,EAAE;MACpB,CAAC;MACD,IAAGD,IAAI,EAAE;QACLC,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;MACzF;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,YAAY,IAAIM,QAAQ,EAAE,EAAE;QACxDS,MAAM,EAAE,KAAK;QACbP,OAAO,EAAEA;MACb,CAAC,CAAC;MACF,IAAI,CAACK,QAAQ,CAACG,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACf;EACJ,CAAC;EACDE,IAAI,EAAE,MAAAA,CAAOf,QAAQ,EAAEgB,IAAI,EAAEf,IAAI,GAAC,IAAI,KAAK;IACvC,IAAI;MACA,IAAIC,OAAO,GAAG;QACV,cAAc,EAAE;MACpB,CAAC;MACD,IAAGD,IAAI,EAAE;QACLC,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;MACzF;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,YAAY,IAAIM,QAAQ,EAAE,EAAE;QACxDS,MAAM,EAAE,MAAM;QACdP,OAAO,EAAEA,OAAO;QAChBe,IAAI,EAAEd,IAAI,CAACe,SAAS,CAACF,IAAI;MAC7B,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACG,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACf;EACJ;EACA;AACJ,CAAC;AAED,eAAef,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}