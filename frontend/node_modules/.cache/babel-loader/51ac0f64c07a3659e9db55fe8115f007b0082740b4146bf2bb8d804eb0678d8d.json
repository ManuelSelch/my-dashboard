{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\nconst useFetchProjects = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const result = await apiService.get(\"projects\");\n        setData(result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return {\n    data\n  };\n};\n_s(useFetchProjects, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\nexport default useFetchProjects;","map":{"version":3,"names":["useState","useEffect","apiService","useFetchProjects","_s","data","setData","fetchData","setLoading","result","get","error","console"],"sources":["/Users/admin/Documents/my-dashboard/src/hooks/useFetchProjects.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\n\nconst useFetchProjects = () => {\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            try {\n                const result = await apiService.get(\"projects\");\n                setData(result);\n            } catch (error) {\n                console.error(error);\n            } \n        };\n\n        fetchData();\n\n    }, []);\n\n    return { data };\n};\n\nexport default useFetchProjects;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BC,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMP,UAAU,CAACQ,GAAG,CAAC,UAAU,CAAC;QAC/CJ,OAAO,CAACG,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDJ,SAAS,CAAC,CAAC;EAEf,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEF;EAAK,CAAC;AACnB,CAAC;AAACD,EAAA,CAnBID,gBAAgB;AAqBtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}